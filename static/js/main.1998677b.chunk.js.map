{"version":3,"sources":["components/Joke/Joke.js","components/Form/Categories/Categories.js","components/Form/Form.js","components/Error/Error.js","components/Home/Home.js","components/Sidebar/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["Joke","date","now","Date","replace","concat","presentDate","result","Math","floor","this","props","className","categories","joke","length","onClick","event","onIconClick","alt","src","icon","href","url","target","rel","id","value","getHours","updated_at","renderCategory","React","Component","Categories","categoriesList","map","category","key","type","name","checked","activeCategory","onChange","htmlFor","Form","state","searchType","search","queryError","onSelectSeachByCategory","setState","onSelectSearchByInputText","handleSubmit","preventDefault","onGetJokeButtonClick","apiEndUrl","getJokes","onSubmit","e","jokeCategories","placeholder","disabled","Error","children","Home","jokes","error","getCategories","a","fetch","api_url","json","data","message","isFavorite","favoriteJokes","createJokes","removeFavoriteJokeHandler","addFavoriteJokeHandler","propTypes","PropTypes","array","func","Sidebar","window","addEventListener","pageYOffset","innerWidth","sidebar_header","style","opacity","isSidebarOpen","toggleIsSidebarOpen","renderJokes","bool","App","JSON","parse","localStorage","getItem","addFavoriteJoke","prevState","setItem","stringify","removeFavoriteJoke","jokeToRemove","filter","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.1998677b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport \"./joke.sass\";\n\nclass Joke extends React.Component {\n\n  getHours(date) {\n    const MILISECONDS_IN_HOUR = 3600000\n    const now = Date.now()\n    date = date.replace(' ', \"T\").concat(\"Z\") //convert to data format^ that sapport safari, chrome and other browser\n    const presentDate = new Date(date)\n    const result = Math.floor((now - presentDate) / MILISECONDS_IN_HOUR)\n\n\n    if (result === 1) {\n      return `1 hour ago`\n    }\n    return `${result} hours ago`\n  }\n\n  renderCategory() {\n    if (this.props.className === 'joke_sidebar') {\n      return null\n    }\n\n    let categories = this.props.joke.categories\n    if (categories && categories.length > 0) {\n      return <p className=\"joke__category\">{categories[0]}</p>\n    }\n    return <p></p>\n  }\n\n  render() {\n    return (\n      <div className={`joke ${this.props.className || ''}`} >\n\n        <img onClick={event => this.props.onIconClick(this.props.joke)} className=\"joke__love-icon\" alt=\"icon\" src={`img/${this.props.icon}`}></img>\n\n        <div className=\"joke__content\">\n\n          <div className=\"joke__icon-box\">\n            <img className=\"joke__text-icon\" alt=\"icon\" src=\"img/text-icon.svg\"></img>\n          </div>\n\n          <div className=\"joke__layout \">\n            <div className=\"joke__id\">\n              <p className=\"joke__id-text\">ID:\n                <a href={this.props.joke.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <span className=\"joke__id-number\">{this.props.joke.id}</span>\n                  <img className=\"joke__id-icon\" src=\"img/share-icon.svg\" alt=\"icon\"></img>\n                </a>\n              </p>\n            </div>\n            <div className=\"joke__text-block\">\n              <p className=\"joke__text\">{this.props.joke.value}</p>\n            </div>\n            <div className=\"joke__footer\">\n              <p className=\"joke__update\">\n                Last update: <span className=\"joke__update-hours\">{this.getHours(this.props.joke.updated_at)}</span>\n              </p>\n              {this.renderCategory()}\n            </div>\n          </div>\n\n        </div>\n      </div >\n    )\n  }\n}\n\nJoke.propTypes = {\n  onIconClick: PropTypes.func,\n  icon: PropTypes.string,\n  joke: PropTypes.object\n}\n\nexport default Joke;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport \"./Categories.sass\";\n\nfunction Categories(props) {\n\n  return (\n    <div className=\"categories\">\n      {props.categoriesList.map(category => {\n        return (\n          <div className='category'\n            key={category}>\n            <input\n              className=\"sub-radio__input\"\n              type=\"radio\"\n              id={`category__${category}`}\n              name=\"category\"\n              value={`${category}`}\n              checked={props.activeCategory === category}\n              onChange={event => {\n                return props.onChange(event.target.value)\n              }\n              } />\n            <label\n              className=\"sub-radio__label\"\n              htmlFor={`category__${category}`}>{`${category}`}</label>\n          </div>\n        )\n      })\n      }\n    </div >\n  )\n}\n\nCategories.propTypes = {\n  categoriesList: PropTypes.array,\n  activeCategory: PropTypes.string,\n  onChange: PropTypes.func\n}\n\nexport default Categories;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport \"./Form.sass\";\nimport Categories from \"./Categories/Categories\"\n\nclass Form extends React.Component {\n\n\n\n  state = {\n    searchType: 'random',\n    activeCategory: '',\n    search: '',\n    queryError: ' '\n  };\n\n\n  onGetJokeButtonClick(apiEndUrl) {\n    switch (apiEndUrl) {\n      case 'random':\n        this.props.getJokes('random')\n        break;\n\n      case 'category':\n        this.props.getJokes(`random?category=${this.state.activeCategory}`)\n        break;\n\n      case 'search':\n        this.props.getJokes(`search?query=${this.state.search}`)\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  onSelectSeachByCategory = (category) => {\n    this.setState({\n      activeCategory: category\n    })\n  }\n\n  onSelectSearchByInputText = event => {\n    if (event.target.value.length < 3 || event.target.value.length > 120) {\n      this.setState({\n        search: event.target.value,\n        queryError: 'Plese input valid value'\n      })\n\n    }\n    else {\n      this.setState({\n        search: event.target.value,\n        queryError: ''\n      })\n    }\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.onGetJokeButtonClick(this.state.searchType)\n  }\n\n\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <ul id=\"search-type\" className=\"search-type\">\n          <li className=\"search-type__item\">\n            <input\n              className='main-radio__input'\n              type=\"radio\"\n              id=\"random\"\n              name=\"getMethod\"\n              value=\"random\"\n              checked={this.state.searchType === \"random\"}\n              onChange={(e) => this.setState({ searchType: e.target.value })}\n            />\n            <label className=\"main-radio__label\" htmlFor=\"random\">Random</label>\n          </li>\n\n          <li className=\"search-type__item\">\n            <input className='main-radio__input'\n              type=\"radio\"\n              id=\"category\"\n              name=\"getMethod\"\n              value=\"category\"\n              checked={this.state.searchType === \"category\"}\n              onChange={(e) => {\n                this.state.activeCategory\n                  ? this.setState({\n                    searchType: e.target.value,\n                  })\n                  : this.setState({\n                    searchType: e.target.value,\n                    activeCategory: this.props.jokeCategories[0]\n                  }\n                  )\n              }}\n            />\n            <label className=\"main-radio__label\" htmlFor=\"category\">From category</label>\n            {this.state.searchType === 'category' ?\n              < Categories\n                categoriesList={this.props.jokeCategories}\n                onChange={this.onSelectSeachByCategory}\n                activeCategory={this.state.activeCategory} />\n              : null}\n          </li>\n\n          <li className=\"search-type__item\">\n            <input className='main-radio__input'\n              type=\"radio\"\n              id=\"search\"\n              name=\"getMethod\"\n              value=\"search\"\n              checked={this.state.searchType === \"search\"}\n              onChange={(e) => {\n                return this.setState({ searchType: e.target.value })\n              }}\n            />\n            <label className=\"main-radio__label\" htmlFor=\"search\">Search</label>\n          </li>\n          {\n            this.state.searchType === 'search'\n              ? <div className=\"input__box\">\n\n                <input\n                  className=\"search__input\"\n                  type=\"text\"\n                  id=\"lname\"\n                  name=\"lname\"\n                  value={this.state.search}\n                  placeholder=\"Free text search...\"\n                  onChange={this.onSelectSearchByInputText} />\n              </div>\n              : null\n          }\n        </ul >\n        < input\n          disabled={this.state.queryError && this.state.searchType === 'search'}\n          className=\"search-type__button\"\n          type=\"submit\"\n          value=\"Get a joke\" />\n      </form>\n    )\n  }\n}\n\nForm.propTypes = {\n  getJokes: PropTypes.func,\n  jokeCategories: PropTypes.array\n}\n\nexport default Form;\n","import React from \"react\"\nimport \"./Error.sass\"\n\nconst Error = props => (\n  < div className=\"error\" >\n    {props.children}\n  </div >\n)\n\n\nexport default Error;","import React from \"react\";\nimport Joke from \"../Joke/Joke\"\nimport PropTypes from 'prop-types';\nimport Form from \"../Form/Form\"\nimport Error from \"../Error/Error\"\nimport \"./Home.sass\";\n\n\nconst API_START_URL = \"https://api.chucknorris.io/jokes/\"\n\nclass Home extends React.Component {\n\n  state = {\n    jokes: [],\n    error: '',\n    jokeCategories: ''\n  }\n\n  getCategories = async () => {\n    const api_url = await fetch(`https://api.chucknorris.io/jokes/categories`)\n    const data = await api_url.json()\n    this.setState({\n      jokeCategories: data\n    })\n\n  }\n\n  getJokes = async (apiEndUrl) => {\n    const api_url = await fetch(`${API_START_URL + apiEndUrl}`)\n    const data = await api_url.json()\n\n    if (data.result) {\n      if (data.result.length > 0) {\n        this.setState({\n          jokes: data.result,\n          error: ''\n        });\n      }\n      else {\n        this.setState({\n          jokes: [],\n          error: 'Jokes was not found'\n        });\n      }\n\n    }\n    else if (data.error) {\n      this.setState({\n        jokes: [],\n        error: data.message\n      })\n    }\n    else {\n      this.setState({\n        jokes: [data],\n        error: ''\n      });\n    }\n\n  }\n\n  isFavorite = (joke) => {\n\n    for (const favoriteJoke of this.props.favoriteJokes) {\n      if (favoriteJoke.id === joke.id) {\n        return true\n      }\n    }\n    return false\n  }\n\n  createJokes = (jokes) => {\n    return (\n      <div className=\"jokes\">\n        {\n          jokes.map(joke => {\n            return this.isFavorite(joke)\n              ? <Joke\n                key={joke.id}\n                onIconClick={this.props.removeFavoriteJokeHandler}\n                icon=\"love-icon_fill.svg\"\n                joke={joke}\n              />\n              : <Joke\n                key={joke.id}\n                onIconClick={this.props.addFavoriteJokeHandler}\n                icon=\"love-icon.svg\"\n                joke={joke}\n              />\n          })\n        }\n      </div>)\n  }\n\n\n\n  render() {\n\n    if (!this.state.jokeCategories) {\n      this.getCategories()\n    }\n\n    return (\n      <div className=\"main-block\">\n        <header className=\"main-block__header\">\n          <p className=\"main-block__logo\"> Msi 2020 </p>\n          <h3 className=\"main-header\">Hey!</h3>\n          <h4 className=\"sub-header\">Let’s try to find a joke for you:</h4>\n        </header>\n\n        <Form\n          getJokes={this.getJokes}\n          jokeCategories={this.state.jokeCategories} />\n\n        {\n          this.state.jokes.length !== 0\n            ? this.createJokes(this.state.jokes)\n            : null\n        }\n\n        {\n          this.state.error\n            ? <Error>\n              {this.state.error}\n            </Error>\n\n            : null\n        }\n      </div>\n    )\n  }\n}\n\nForm.propTypes = {\n  favoriteJokes: PropTypes.array,\n  addFavoriteJokeHandler: PropTypes.func,\n  removeFavoriteJokeHandler: PropTypes.func\n}\n\nexport default Home;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport \"./Sidebar.sass\";\nimport Joke from \"../Joke/Joke\"\n\nclass Sidebar extends React.Component {\n\n  componentDidMount() {\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 20 && window.innerWidth < 970) {\n        window.sidebar_header.style.opacity = \"0\"\n      }\n      else {\n        window.sidebar_header.style.opacity = \"1\"\n      }\n    });\n  }\n\n  renderJokes() {\n    return this.props.jokes.length > 0\n      ? (\n        <div className=\"jokes jokes_sidebar\"\n          id=\"sidebar\">\n          {this.props.jokes.map(joke => {\n            return <Joke\n              key={joke.id}\n              icon=\"love-icon_fill.svg\"\n              className=\"joke_sidebar\"\n              onIconClick={this.props.removeFavoriteJokeHandler}\n              joke={joke} />\n          })}\n        </div>)\n      : null\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className={`sidebar__backdrop ${this.props.isSidebarOpen ? 'sidebar__backdrop_open' : ''}`}\n          onClick={this.props.toggleIsSidebarOpen} />\n\n        <div className={`sidebar ${this.props.isSidebarOpen ? 'sidebar_open' : ''}`}>\n          <div\n            className=\"sidebar__header\"\n            id=\"sidebar_header\">\n            <div\n              className={`sidebar__button ${this.props.isSidebarOpen ? 'sidebar__button_open' : ''}`}\n              onClick={this.props.toggleIsSidebarOpen}>\n              <div className=\"sidebar__burger\" />\n            </div>\n            <h3 className=\"sidebar__favorite\">\n              Favorite\n            </h3>\n          </div>\n          {this.renderJokes()}\n        </div>\n      </>)\n  }\n}\n\nJoke.propTypes = {\n  jokes: PropTypes.array,\n  removeFavoriteJokeHandler: PropTypes.func,\n  isSidebarOpen: PropTypes.bool,\n  toggleIsSidebarOpen: PropTypes.func\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport './App.sass';\nimport Home from \"./components/Home/Home\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\n\nclass App extends React.Component {\n\n  state = {\n    favoriteJokes: JSON.parse(localStorage.getItem('favoriteJokes')) || [],\n    isSidebarOpen: false\n  }\n\n  addFavoriteJoke = (joke) => {\n    this.setState(\n      prevState => {\n        return {\n          favoriteJokes: prevState.favoriteJokes.concat(joke)\n        }\n      },\n      () => {\n        localStorage.setItem('favoriteJokes', JSON.stringify(this.state.favoriteJokes))\n      });\n  }\n\n  removeFavoriteJoke = (jokeToRemove) => {\n    this.setState(\n      prevState => {\n        return {\n          favoriteJokes: prevState.favoriteJokes.filter(joke => joke.id !== jokeToRemove.id)\n        };\n      },\n      () => {\n        localStorage.setItem('favoriteJokes', JSON.stringify(this.state.favoriteJokes))\n      }\n    );\n  }\n\n  toggleIsSidebarOpen = () => {\n    this.setState({\n      isSidebarOpen: !this.state.isSidebarOpen\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Home\n          favoriteJokes={this.state.favoriteJokes}\n          addFavoriteJokeHandler={this.addFavoriteJoke}\n          removeFavoriteJokeHandler={this.removeFavoriteJoke}\n        />\n        <Sidebar\n          jokes={this.state.favoriteJokes}\n          removeFavoriteJokeHandler={this.removeFavoriteJoke}\n          isSidebarOpen={this.state.isSidebarOpen}\n          toggleIsSidebarOpen={this.toggleIsSidebarOpen}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.sass';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}